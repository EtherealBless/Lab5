<Window x:Name="window"
        x:Class="GraphEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GraphEditor"
        xmlns:Visualization="clr-namespace:GraphEditor.Visualization"
        mc:Ignorable="d"
        Title="Graph Editor"
        Height="600"
        Width="800"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Window.Resources>
        <Visualization:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <Style x:Key="NodeStyle"
               TargetType="Ellipse">
            <Setter Property="Fill"
                    Value="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"/>
            <Setter Property="Stroke"
                    Value="DarkBlue"/>
            <Setter Property="StrokeThickness"
                    Value="2"/>
        </Style>

        <Style x:Key="EdgeStyle"
               TargetType="Line">
            <Setter Property="Stroke"
                    Value="Black"/>
            <Setter Property="StrokeThickness"
                    Value="2"/>
        </Style>

        <Style x:Key="NodeTextStyle"
               TargetType="TextBlock">
            <Setter Property="HorizontalAlignment"
                    Value="Center"/>
            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            <Setter Property="Foreground"
                    Value="Black"/>
        </Style>
    </Window.Resources>

    <Grid Name="CanvasGrid"
          Margin="-15,40,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Canvas Grid.Row="1"
                DataContext="{Binding GraphVM}"
                Background="LightGray"
                Width="Auto"
                Height="Auto"
                Margin="15,0,0,0"
                Name="GraphCanvas">
                
            <Canvas.InputBindings>
                <MouseBinding Gesture="LeftClick"
                              Command="{Binding CanvasClickCommand, 
                              RelativeSource={RelativeSource AncestorType=Window}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"/>
                <MouseBinding Gesture="LeftDoubleClick"
                              Command="{Binding CanvasDoubleClickCommand,
                              RelativeSource={RelativeSource AncestorType=Window}}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"/>
            </Canvas.InputBindings>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Canvas Grid.Row="1">
                    <ItemsControl ItemsSource="{Binding NodesVM}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left"
                                        Value="{Binding X}"/>
                                <Setter Property="Canvas.Top"
                                        Value="{Binding Y}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding DataContext.NodeDoubleClickCommand, 
                                                      RelativeSource={RelativeSource AncestorType=Window}}"
                                                      CommandParameter="{Binding}"/>
                                        <MouseBinding Gesture="LeftClick"
                                                      Command="{Binding DataContext.NodeClickCommand, 
                                                      RelativeSource={RelativeSource AncestorType=Window}}"
                                                      CommandParameter="{Binding}"/>
                                    </Grid.InputBindings>
                                    <Ellipse Style="{StaticResource NodeStyle}"
                                             Width="{Binding Width}"
                                             Height="{Binding Height}"/>
                                    <TextBlock Style="{StaticResource NodeTextStyle}"
                                               Text="{Binding Node.Id}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl ItemsSource="{Binding EdgesVM}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid
                                    Margin="{Binding Margin}">
                                    <Line Style="{StaticResource EdgeStyle}"
                                          X1="{Binding NormalFrom.X}"
                                          Y1="{Binding NormalFrom.Y}"
                                          X2="{Binding NormalTo.X}"
                                          Y2="{Binding NormalTo.Y}"/>
                                    <TextBlock Style="{StaticResource NodeTextStyle}"
                                               Text="{Binding NodeFrom.Node.Id}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Canvas>

            </Grid>
        </Canvas>
        <ComboBox x:Name="SelectAlgorithmCM"
                  HorizontalAlignment="Left"
                  Margin="25,-32,0,0"
                  VerticalAlignment="Top"
                  Width="120"
                  ItemsSource="{Binding Algorithms}"
                  SelectedValuePath="Value"
                  DisplayMemberPath="Key"
                  SelectedValue="{Binding SelectedAlgorithm, UpdateSourceTrigger=PropertyChanged}"/>
        <Button x:Name="RunStopButton"
                HorizontalAlignment="Left"
                Margin="150,-31,0,0"
                VerticalAlignment="Top"
                Width="105"
                Command="{Binding RunStopAlgorithm}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRunning}"
                                     Value="True">
                            <Setter Property="Content"
                                    Value="Stop"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsRunning}"
                                     Value="False">
                            <Setter Property="Content"
                                    Value="Run"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button HorizontalAlignment="Left"
                Margin="265,-31,0,0"
                VerticalAlignment="Top"
                Width="75"
                Content="Step forward"
                Command="{Binding StepForwardCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsStepableForward}"
                                     Value="False">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsStepableForward}"
                                     Value="True">
                            <Setter Property="IsEnabled"
                                    Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button HorizontalAlignment="Left"
                Margin="345,-31,0,0"
                VerticalAlignment="Top"
                Width="75"
                Command="{Binding StepBackwardCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsStepableBackward}"
                                     Value="False">
                            <Setter Property="IsEnabled"
                                    Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsStepableBackward}"
                                     Value="True">
                            <Setter Property="IsEnabled"
                                    Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Content>Step back</Button.Content>
        </Button>
    </Grid>
</Window>
